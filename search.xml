<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>最大正方形</title>
      <link href="/2023/07/29/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
      <url>/2023/07/29/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>题目：最大的正方形</p><p>描述：<br>在一个由 ‘0’ 和 ‘1’ 组成的二维矩阵内，找到只包含 ‘1’ 的最大正方形，并返回其面积。</p><p>思路：<br>其实很容易得出，最大正方形就是求当前坐标能得到的最大正方形，那我们又如何得到呢？</p><img src="/images/pasted-0.png"><p>如果当前坐标(i,j)值为1，则是一个可能扩充的正方形，<br>如果满足(i-1,j-1),(i,j-1),(i-1,j)都为1,那么此时正方形面积就能扩张，而我们根据这就能推出，当(i-1,j-1),(i,j-1),(i-1,j)的正方形均相同时，此时(i,j)才能扩张。<br>否则只能取三者中的最小值。<br>简单来说下原理吧，类似于木桶短板理论</p><img src="/images/pasted-3.png"><p>三者最小值的含义是要满足正方形受限于最小边长，否则就不是正方形了。</p><p>接下来就可以写出状态方程了：<br>dp[i][j] &#x3D; Min(dp[i-1][j],dp[i][j-1],dp[i-1][j-1])+1;<br>下面给出一个示例，以及dp的值</p><img src="/images/pasted-4.png"><p>最后上代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maximalSquare</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">int</span> m <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">;</span>       <span class="token keyword">int</span> n <span class="token operator">=</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>       <span class="token comment">//初始化一个二维数组dp</span>       <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">int</span> maxSide <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//若i或j=0,初始化dp[i][j]=1,也就是正方形面积为1</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">else</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                    maxSide <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxSide<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> maxSide <span class="token operator">*</span> maxSide<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后附上题目链接<br><a href="https://leetcode.cn/problems/maximal-square/">https://leetcode.cn/problems/maximal-square/</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>honor</title>
      <link href="/2023/07/29/honor/"/>
      <url>/2023/07/29/honor/</url>
      
        <content type="html"><![CDATA[<p>大自然在为社会创造人类的同时赋予了他两种本质欲望，一种是取悦他的同类，另一种是不愿意得罪他的同类。</p><p>大自然教导他对同类的幸福感到愉悦，对同类的不幸感到痛苦。</p><p>多数人的成功……多数情况下要依靠他们的邻居和同伴的帮助与善意，而帮助和善意在没有被人们接受的情况下是难以获得的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>山不转，路转；路不转，人转。</title>
      <link href="/2023/07/24/1/"/>
      <url>/2023/07/24/1/</url>
      
        <content type="html"><![CDATA[<p> 人生天地间，路路九曲弯，从来没有笔直的。</p><p>水能直至大海，就是因为它巧妙地避开所有障碍，不断拐弯前行。</p><p>许多聪明人没能走上成功之路，不少是因为撞了南墙不回头。</p><p>人生路上难免会遇到困难，拐个弯，绕一绕何尝不是个办法。</p><p>山不转，路转；路不转，人转。</p><p>只要心念一转，逆境也能成机遇。只要你心里拐个弯，就会路随心而转从而超越自我，开创新的天</p><p> 前进需要勇气，拐弯需要智慧。路不通时，选择拐弯，心不快时，选择看淡；情渐远时，选择随意。</p><p>人生如行路，一路艰辛一路风景。</p><p>爱因斯坦曾说：“人的最高本领是适应客观条件的能力。”</p><p>达尔文说得更透彻：“适者生存。”</p><p>他们所说的“适”，用通俗的话说，就是会“拐弯”。</p><p>走过一些路，才知道辛苦；</p><p>登过一些山，才知道艰难；</p><p>趟过一些河，才知道跋涉；</p><p>跨过一些坎，才知道超越。</p><p>只要你愿意走，路的尽头依然是路。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
